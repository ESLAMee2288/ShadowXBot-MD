let handler = (m, { usedPrefix, command, text }) => {
  if (!text) throw `โจ๏ธ ูุซุงู:\n${usedPrefix + command} 2000 06 09`;

  // ุชุญููู ุงููุต ุงููุฏุฎู ุฅูู ุชุงุฑูุฎ ๐
  const date = new Date(text);
  if (isNaN(date))
    throw "โ ุงูุชุงุฑูุฎ ูุด ุตุญูุญุ ุฌุฑุจ ุงูุชูุณูู ุฏู: AAAA MM DD ูุซุงู: 2003 02 07";

  const d = new Date();
  const [tahun, bulan, tanggal] = [
    d.getFullYear(),
    d.getMonth() + 1,
    d.getDate(),
  ]; // ุงูุณูุฉ ูุงูุดูุฑ ูุงูููู ุงูุญุงูู ๐
  const birth = [date.getFullYear(), date.getMonth() + 1, date.getDate()]; // ุชุงุฑูุฎ ุงููููุงุฏ ๐

  const zodiac = getZodiac(birth[1], birth[2]); // ุงูุจุฑุฌ ุงููููู ุจูุงุกู ุนูู ุงูุดูุฑ ูุงูููู โโโ
  const ageD = new Date(d - date); // ุญุณุงุจ ุงูุนูุฑ ุจุงุณุชุฎุฏุงู ุงููุฑู ุจูู ุงูุชุงุฑูุฎ ุงูุญุงูู ูุชุงุฑูุฎ ุงููููุงุฏ ๐
  const age = ageD.getFullYear() - 1970; // ุญุณุงุจ ุงูุนูุฑ ุจุฏูุฉ ๐งโ๐ฆณ

  // ุญุณุงุจ ุชุงุฑูุฎ ุนูุฏ ุงููููุงุฏ ุงููุงุฏู ๐
  const birthday = [
    tahun + (birth[1] < bulan || (birth[1] === bulan && birth[2] < tanggal)),
    ...birth.slice(1),
  ];

  // ุชุญุฏูุฏ ุฅุฐุง ูุงู ุงูููู ูู ุนูุฏ ูููุงุฏ ุงูุดุฎุต ๐
  const cekusia =
    bulan === birth[1] && tanggal === birth[2]
      ? `${age} - ุนูุฏ ูููุงุฏ ุณุนูุฏ ูุง ุญุจูุจู โ๏ธ๐`
      : age;

  const teks = `
ุชุงุฑูุฎ ุงููููุงุฏ: ${birth.join("-")} ๐๏ธ
ุนูุฏ ุงููููุงุฏ ุงููุงุฏู: ${birthday.join("-")} ๐
ุงูุนูุฑ: ${cekusia} ๐
ุงูุจุฑุฌ ุงููููู: ${zodiac} ๐
`.trim();

  // ุฅุฑุณุงู ุงูุฑุฏ ูููุณุชุฎุฏู ๐ฌ
  m.reply(teks);
};

handler.help = ["zodiac *2002 02 25*"];
handler.tags = ["fun"];
handler.command = ["ุนูุฑู"];

export default handler;

// ูุงุฆูุฉ ุงูุฃุจุฑุงุฌ ุงูููููุฉ ูุชูุงุฑูุฎูุง โโโ
const zodiak = [
  ["ุจุฑุฌ ุงูุฌุฏู", new Date(1970, 0, 1)],
  ["ุจุฑุฌ ุงูุฏูู", new Date(1970, 0, 20)],
  ["ุจุฑุฌ ุงูุญูุช", new Date(1970, 1, 19)],
  ["ุจุฑุฌ ุงูุญูู", new Date(1970, 2, 21)],
  ["ุจุฑุฌ ุงูุซูุฑ", new Date(1970, 3, 21)],
  ["ุจุฑุฌ ุงูุฌูุฒุงุก", new Date(1970, 4, 21)],
  ["ุจุฑุฌ ุงูุณุฑุทุงู", new Date(1970, 5, 22)],
  ["ุจุฑุฌ ุงูุฃุณุฏ", new Date(1970, 6, 23)],
  ["ุจุฑุฌ ุงูุนุฐุฑุงุก", new Date(1970, 7, 23)],
  ["ุจุฑุฌ ุงูููุฒุงู", new Date(1970, 8, 23)],
  ["ุจุฑุฌ ุงูุนูุฑุจ", new Date(1970, 9, 23)],
  ["ุจุฑุฌ ุงูููุณ", new Date(1970, 10, 22)],
  ["ุจุฑุฌ ุงูุฌุฏู", new Date(1970, 11, 22)],
].reverse();

function getZodiac(month, day) {
  let d = new Date(1970, month - 1, day);
  return zodiak.find(([_, _d]) => d >= _d)[0];
}
